services:
  # Document markup service
  markup:
    container_name: equix-markup
    build:
      context: .
      dockerfile: services/markup/Dockerfile
    command: "python app.py"
    volumes:
      - ./src:/app/src # Mount sources to container
      - ./models:/app/models # Mount models to container
    ports:
      - "5123:5123"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - MODEL_DEVICE=auto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5125/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Information extraction service
  information:
    container_name: equix-information
    build:
      context: .
      dockerfile: services/information/Dockerfile
    command: "python app.py"
    volumes:
      - ./src:/app/src # Mount sources to container
      - ./models:/app/models # Mount models to container
    ports:
      - "5124:5124"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - MODEL_DEVICE=auto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5124/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    depends_on:
      layout:
        condition: service_healthy

  # Layout extraction service (formerly graphics)
  layout:
    container_name: equix-layout
    build:
      context: .
      dockerfile: services/graphics/Dockerfile
    command: "python app.py"
    volumes:
      - ./src:/app/src # Mount sources to container
      - ./models:/app/models # Mount models to container
    ports:
      - "5125:5125"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      - MODEL_DEVICE=auto
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5123/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Mock service for testing
  mock:
    container_name: equix-mock
    build:
      context: .
      dockerfile: services/mock/Dockerfile
    command: "python app.py"
    volumes:
      - ./src:/app/src # Mount sources to container
    ports:
      - "5126:5126"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=DEBUG
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5126/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  default:
    name: equix-network
    driver: bridge

volumes:
  models:
    driver: local
  logs:
    driver: local
